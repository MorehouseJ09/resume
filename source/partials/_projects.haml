#projects

	%div
		%h1= "Projects"

	%div

		%div

			%h2= "Flashquest"

			%p
				Lead engineer / developer. Responsible for making technological decisions and implementing them. Building our V1 backend using Ruby on Rails, Node.js, Express.js, MongoDB. Building with a Behavior Driven Development first approach. Building a json api as well as interactive business portal.
			
			%a{:href=>"http://flashquest.com"}= "Site"	
		%div						

			%h2= "Extensive Unix Configuration/Scripting/Dotfiles Project"

			%p 

				Have created a place to store all of my machine configuration as I explore advanced parts of the Unix operating system. Constantly am contributing to this project as I strive to improve workflow by exploring new technologies and tools.

			%a{:href=>"http://github.com/MorehouseJ09/dotfiles"}="Dotfiles"
		%div

			%h2= "Prospero"

			%p

				Currently launching a full service web application / website for a commerical real estate company in Canada. Implemented a complete CMS for non-technical employees to update site. Built using a LAMP backend as well as several custom tools. I have implemented a Node.JS deployment tool, as well as a custom C++ search engine for this application.

			%a{:href=>"http://prospero.jonmorehouse.me"}= "Working Demo"
			%a{:href=>"http://github.com/MorehouseJ09/prospero"}= "Main Repo"
			%a{:href=>"http://github.com/MorehouseJ09/search_module"}= "Search Repo"
			%a{:href=>"http://github.com/MorehouseJ09/prospero_build"}= "Build Tool Repo"

		%div

			%h2= "Advanced File Synchronization"

			%p
				I'm very interested in big data and how to manage it, even in my own personal life. I created a program using Python and MongoDB to dynamically perform advanced synchronizations of many files. I'm currently researching various sync algorithms to help implement this more efficiently in GoLang.

			%a{:href=>"http://github.com/MorehouseJ09/directory_sync"}= "Directory Sync Repo"

		%div 

			%h2= "OpenGL / WebGL HeightField Project"	

			%p 
				I turned a class project using OpenGL to implement a height field based upon pixel intensities into an immersive application, while diving into the inner-workings of OpenGl. I'm excited to apply this to a WebGL project of the same nature using Express.JS as a backend data store and Three.JS for front-end drawing with WebGL.

			%a{:href=>"http://github.com/MorehouseJ09/opengl_heightfield"}= "HeightField Repo"

		%div

			%h2= "DNS / General Networking"

			%p
				I'm interested in the various networking protocols and am doing some directed research in my spare time. I'm currently hacking on a DNS Server technology called Bind to implement my own local DNS resolver.

		



